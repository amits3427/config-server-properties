service.name= health-service

logging.level.org.springframework=DEBUG
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=H2
spring.sql.init.platform=h2
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
spring.h2.console.enabled=true

spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
spring.database.driverClassName= org.h2.Driver
#spring.datasource.username= sa
#spring.datasource.password= password
spring.datasource.url= jdbc:h2:mem:egov
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

eureka.instance.preferIpAddress= true
eureka.client.registerWithEureka= true
eureka.client.fetchRegistry= true
eureka.client.serviceUrl.defaultZone= http://localhost:8761/eureka

gateway-server.hostname=localhost
        
spring.kafka.consumer.bootstrap-servers= localhost:9092
spring.kafka.consumer.group-id= 1
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers= localhost:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.apache.kafka.common.serialization.StringSerializer

        
zipkin.baseUrl: http://localhost:9411

management.endpoints.web.exposure.include= health, metrics, prometheus
management.metrics.tags.application=${spring.application.name}

management.tracing.sampling.probability=1.0
 # Set the sampling probability (1.0 = 100%)
management.otlp.tracing.endpoint=http://localhost:9411/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true
logging.pattern.level=%5p [${spring.application.name:},X%{traceId:-},X%{spanId:-}]
